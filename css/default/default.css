@import url("reflection.css");
@import url("meta.css");
@import url("key.css");
@import url("copy.css");
@import url("timeout.css");
@import url("note.css");

#app {
	
	display: flex;
	height: 100%;
	
}
#frame {
	
	display: flex;
	position: relative;
	
}
#screen, .view-root > div:only-child {
	
	display: flex;
	
}
.f1 #screen, .f1 .view-root > div:only-child,
.f4 #screen, .f4 .view-root > div:only-child,
.f7 #screen, .f7 .view-root > div:only-child { flex-direction: row }
.f2 #screen, .f2 .view-root > div:only-child,
.f5 #screen, .f5 .view-root > div:only-child,
.f8 #screen, .f8 .view-root > div:only-child { flex-direction: column }
.f3 #screen, .f3 .view-root > div:only-child,
.f6 #screen, .f6 .view-root > div:only-child,
.f9 #screen, .f9 .view-root > div:only-child { flex-direction: row-reverse }

.viewport {
	
	--border-color: rgba(216,216,216,1);
	
	--glow-color: rgba(255,255,255,.4);
	
	--last-h: calc(var(--last-height) * (var(--image-seq-target-raw-rect-height-0) / var(--last-raw-height)) * var(--last-correction));
	--last-w: calc(var(--last-width) * (var(--image-seq-target-raw-rect-height-0) / var(--last-raw-height)) * var(--last-correction));
	--viewport-height: calc(var(--height) * (var(--image-seq-target-raw-rect-height-0) / var(--raw-height)) * var(--correction));
	--viewport-width: calc(var(--width) * (var(--image-seq-target-raw-rect-height-0) / var(--raw-height)) * var(--correction));
	
	align-items: var(--viewport-align-items, flex-start);
	border-radius: 2rem;
	box-shadow: 0 0 0rem 1px var(--border-color), 0 0 0rem 2px rgba(80,80,80,1), 0 0 2rem .2rem var(--border-color);
	display: flex;
	height: var(--viewport-height);
	justify-content: var(--viewport-justify-content, flex-start);
	overflow: hidden;
	position: relative;
	transform: rotate3d(0,0,0, 0deg);
	width: var(--viewport-width);
	
	--transition-duration: calc(2s / 3);
	--transition-duration-1: calc(var(--transition-duration) * calc(1 / 3));
	
	animation:	transition2 var(--transition-duration) ease-in 0s 1 var(--app-anime-default-rule),
					transition2 var(--transition-duration-1) ease-in calc(var(--a-current-duration) - var(--transition-duration-1)) 1 reverse forwards running,
					glow calc(var(--a-current-duration) / 2) ease-in 0s 2 alternate-reverse forwards running;
	
}
[data-current-label~="flex-center"] .viewport {
	--viewport-align-items: center;
	--viewport-justify-content: center;
}
@keyframes transition {
	0% {
		height: var(--last-h);
		width: var(--last-w);
	}
	4% {
		height: var(--h);
		width: var(--w);
	}
	100% {
		height: var(--h);
		width: var(--w);
	}
}
@keyframes transition2 {
	0% {
		opacity: 0;
		transform: rotate3d(1,-3,0, 90deg);
	}
	80% {
		opacity: 1;
	}
	100% {
		transform: rotate3d(0,0,0, 90deg);
	}
}
@keyframes glow {
	0% {
		box-shadow: 0 0 0rem 1px var(--border-color), 0 0 0rem 2px rgba(80,80,80,1), 0 0 3rem .5rem var(--glow-color);
	}
	100% {
		box-shadow: 0 0 0rem 1px var(--border-color), 0 0 0rem 2px rgba(80,80,80,1), 0 0 0rem .0rem var(--glow-color);
	}
}
.view {
	
	--kira-color-0: rgba(255,255,255,1);
	--kira-color-1: rgba(144,144,144,1);
	
	/*background:	var(--bgi) var(--bg-pos-flex)/contain no-repeat*//*,
					linear-gradient(-45deg, var(--kira-color-0), var(--kira-color-1), var(--kira-color-0)) left top/24px 24px repeat*/;
	height: 100%;
	position: absolute;
	width: 100%;
	
	/*animation:	transition var(--a-current-duration) ease-out 0s 1 var(--app-anime-default-rule);*/
	
}


.scene {
	
	background:	var(--bgi) var(--bg-pos-flex)/contain no-repeat var(--bgc, transparent);
	
	position: absolute;
	
}
.scene.default {
	
	height: 100%;
	width: 100%;
	
}
.scene:not(.default) {
	
	transform-origin: var(--transform-origin, left top);
	z-index: var(--z-index, 0);
	
	animation: element-preset-anime var(--dur, var(--a-current-duration, var(--a-duration))) var(--func, ease) 0s var(--count, 1) normal var(--fill, forwards) running;
	
}
@keyframes element-preset-anime {
	
	0% {
		height: var(--from-h);
		left: var(--from-x);
		opacity: var(--o-0, 0);
		top: var(--from-y);
		transform: var(--from-t, none);
		width: var(--from-w);
	}
	30% {
		opacity: var(--o-1, 1);
	}
	70% {
		opacity: var(--o-2, 1);
	}
	100% {
		height: var(--to-h, var(--from-h));
		left: var(--to-x, var(--from-x));
		opacity: var(--o-3, 0);
		top: var(--to-y, var(--from-y));
		transform: var(--to-t, var(--from-t));
		width: var(--to-w, var(--from-w));
	}
	
}
.clip:not(.default) {
	
	--in-clip: var(--in-kf, clip) var(--in-dur, 0) var(--in-func, ease) var(--in-delay, 0) var(--in-count, 1) var(--in-direction, normal) var(--in-fill, forwards) running;
	--clip: var(--kf, clip) var(--dur, var(--a-current-duration, var(--a-duration))) var(--func, ease) var(--delay, 0) var(--count, 1) var(--direction, normal) var(--fill, forwards) running;
	--out-clip: var(--in-kf, clip) var(--out-dur, 0) var(--func, ease) var(--out-delay, 0) var(--count, 1) var(--out-direction, normal) var(--fill, forwards) running;
	--clip-animation: var(--in-clip), var(--clip), var(--out-clip);
	
	animation: var(--clip-animation);
	
}


/*
.copy {
	
	--ff: serif;
	--wb: keep-all;
	
	--dur: calc(var(--a-current-duration) * .5);
	--func: ease;
	--delay: 0;
	--iterate: infinite;
	--dir: normal;
	
	--t: none;
	--x: auto;
	--y: auto;
	--h: auto;
	--w: auto;
	--o: 1;
	--fw: bold;
	--fs: 1em;
	--fl: 1.1;
	--ts: 0 .1rem 9 rgba(0,0,0,1), 0 0 1rem rgba(0,0,0,1);
	
	font: normal normal 1000 2rem/1.1 serif;
	height: 100%;
	left: 0;
	position: absolute;
	top: 0;
	width: 100%;
	writing-mode: var(--writing-mode, vertical-rl);
	z-index: 3;
	
}
.copy > div, .copy :not(div) > div {
	
	--dur: calc(var(--a-current-duration) * 0.05);
	--func: ease;
	--delay: calc(var(--a-current-duration) * 1/5);
	--iterate: 1;
	--o: 0;
	--o-to: 1;
	
}
.copy > div > div, .copy :not(div) > div > div {
	
	--delay: calc(var(--a-current-duration) * 4/5);
	--dir: reverse;
	
	opacity: var(--o-to);
	transform: var(--t-to);
	
}
.copy > div > div > p, .copy :not(div) > div > div > p {
	
	--o: 1;
	
}
.copy * {
	
	align-items: var(--align, center);
	display: var(--display, flex);
	flex-direction: var(--direction, column);
	font: normal normal var(--fw) var(--fs)/var(--fl) var(--ff);
	justify-content: var(--justify, center);
	left: var(--x);
	height: var(--h);
	opacity: var(--o);
	position: var(--p, relative);
	top: var(--y);
	transform: var(--t);
	width: var(--w);
	word-break: var(--wb);
	writing-mode: var(--writing-mode, vertical-rl);
	
	animation: copy-anime var(--dur) var(--func) var(--delay) var(--iterate) var(--dir) forwards running;
	
}
.copy > section {
	
	--align: flex-start;
	
	justify-content: space-evenly;
	height: 50%;
	top: 25%;
	width: 100%;
	
}
@keyframes copy-anime {
	from {
		font: normal normal var(--fw) var(--fs)/var(--fl) var(--ff);
		left: var(--x);
		height: var(--h);
		opacity: var(--o);
		text-shadow: var(--ts);
		top: var(--y);
		transform: var(--t);
		width: var(--w);
	}
	to {
		font: normal normal var(--fw-to, var(--fw)) var(--fs-to, var(--fs))/var(--fl-to, var(--fl)) var(--ff);
		left: var(--x-to, var(--x));
		height: var(--h-to, var(--h));
		opacity: var(--o-to, var(--o));
		text-shadow: var(--ts-to, var(--ts));
		top: var(--y-to, var(--y));
		transform: var(--t-to, var(--t));
		width: var(--w-to, var(--w));
	}
}
*/