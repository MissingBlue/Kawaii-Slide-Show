#app {
	
	display: flex;
	height: 100%;
	
}
#frame {
	
	display: flex;
	position: relative;
	
}
#screen {
	
	display: flex;
	
}
.viewport {
	
	--border-color: rgba(216,216,216,1);
	
	--glow-color: rgba(255,255,255,.4);
	
	--last-h: calc(var(--last-height) * (var(--image-seq-target-raw-rect-height-0) / var(--last-raw-height)) * var(--last-correction));
	--last-w: calc(var(--last-width) * (var(--image-seq-target-raw-rect-height-0) / var(--last-raw-height)) * var(--last-correction));
	--h: calc(var(--height) * (var(--image-seq-target-raw-rect-height-0) / var(--raw-height)) * var(--correction));
	--w: calc(var(--width) * (var(--image-seq-target-raw-rect-height-0) / var(--raw-height)) * var(--correction));
	
	border-radius: 2rem;
	box-shadow: 0 0 0rem 1px var(--border-color), 0 0 0rem 2px rgba(80,80,80,1), 0 0 2rem .2rem var(--border-color);
	height: var(--h);
	overflow: hidden;
	position: relative;
	transform: rotate3d(0,0,0, 0deg);
	width: var(--w);
	
	--transition-duration: calc(2s / 3);
	--transition-duration-1: calc(var(--transition-duration) * calc(1 / 3));
	
	animation:	transition2 var(--transition-duration) ease-in 0s 1 var(--app-anime-default-rule),
					transition2 var(--transition-duration-1) ease-in calc(var(--a-current-duration) - var(--transition-duration-1)) 1 reverse forwards running,
					glow calc(var(--a-current-duration) / 2) ease-in 0s 2 alternate-reverse forwards running;
	
}
@keyframes transition {
	0% {
		height: var(--last-h);
		width: var(--last-w);
	}
	4% {
		height: var(--h);
		width: var(--w);
	}
	100% {
		height: var(--h);
		width: var(--w);
	}
}
@keyframes transition2 {
	0% {
		opacity: 0;
		transform: rotate3d(1,-3,0, 90deg);
	}
	80% {
		opacity: 1;
	}
	100% {
		transform: rotate3d(0,0,0, 90deg);
	}
}
@keyframes glow {
	0% {
		box-shadow: 0 0 0rem 1px var(--border-color), 0 0 0rem 2px rgba(80,80,80,1), 0 0 3rem .5rem var(--glow-color);
	}
	100% {
		box-shadow: 0 0 0rem 1px var(--border-color), 0 0 0rem 2px rgba(80,80,80,1), 0 0 0rem .0rem var(--glow-color);
	}
}
.view {
	
	--kira-color-0: rgba(255,255,255,1);
	--kira-color-1: rgba(144,144,144,1);
	
	/*background:	var(--bgi) var(--bg-pos-flex)/contain no-repeat*//*,
					linear-gradient(-45deg, var(--kira-color-0), var(--kira-color-1), var(--kira-color-0)) left top/24px 24px repeat*/;
	height: 100%;
	position: absolute;
	width: 100%;
	
	/*animation:	transition var(--a-current-duration) ease-out 0s 1 var(--app-anime-default-rule);*/
	
}
/*
.view::before, .view::after {
	
	content: "";
	display: block;
	height: 100%;
	left: 0;
	position: absolute;
	top: 0;
	width: 100%;
	
}
.view::before {
	
	animation: white-reflection var(--a-current-duration) ease-in 0s 1 var(--app-anime-default-rule);
	
}
@keyframes white-reflection {
	
	0% { background: none; }
	0.1% {
		background: var(--bgi-reflect) var(--bgi-reflect-pos-0)/var(--bgi-reflect-size) no-repeat;
	}
	20% {
		background: var(--bgi-reflect) var(--bgi-reflect-pos-1)/var(--bgi-reflect-size) no-repeat;
	}
	20.1% { background: none; }
	100% { background: none; }
	
}
@keyframes white-reflection2 {
	
	0% {
		background: var(--bgi-reflect) var(--bgi-reflect-pos-0)/var(--bgi-reflect-size) no-repeat;
	}
	100% {
		background: var(--bgi-reflect) var(--bgi-reflect-pos-1)/var(--bgi-reflect-size) no-repeat;
	}
	
}
.view::after {
	
	animation: pop-out- var(--a-current-duration) linear 0s 1 var(--app-anime-default-rule);
	
}
@keyframes pop-out {
	
	0% { background: radial-gradient(circle at center, rgba(255,255,255,1) 50%, transparent 50.1%) center/500% 500% no-repeat; }
	5% { background: radial-gradient(circle at center, rgba(255,255,255,1) 50%, transparent 50.1%) center/0px 0px no-repeat; }
	5.1% { background: none; }
	95% { background: none; }
	95.1% { background: radial-gradient(circle at center, rgba(255,255,255,1) 50%, transparent 50.1%) center/0px 0px no-repeat; }
	100% { background: radial-gradient(circle at center, rgba(255,255,255,1) 50%, transparent 50.1%) center/500% 500% no-repeat; }
	
}
*/
.reflection {
	
	--bgi-reflect-color-0: transparent;
	--bgi-reflect: linear-gradient(135deg, var(--bgi-reflect-color-0) 20%, rgba(255,255,255,calc(3/4)) 22.5%, rgba(255,255,255,0) 75%, var(--bgi-reflect-color-0));
	--bgi-reflect-height: 400;
	--bgi-reflect-size: 100% calc(var(--bgi-reflect-height) * 1%);
	--bgi-reflect-pos-y: calc(-100 / (var(--bgi-reflect-height) - 100) * 100%);
	--bgi-reflect-pos-0: 0% var(--bgi-reflect-pos-y);
	--bgi-reflect-pos-1: 0% calc(var(--bgi-reflect-pos-y) * -1 + 100%);
	
	--ref-func: ease;
	--ref-count: 1;
	--ref-dir: normal;
	--ref-fill: forwards;
	--ref-state: running;
	
	height: 100%;
	left: 0;
	position: absolute;
	top: 0;
	width: 100%;
	z-index: 2147483647;
	
	animation: reflection var(--ref-dur) var(--ref-func) var(--ref-delay) var(--ref-count) var(--ref-dir) var(--ref-fill) var(--ref-state);
	
}
@keyframes reflection {
	
	0% {
		background: var(--bgi-reflect) var(--bgi-reflect-pos-0)/var(--bgi-reflect-size) no-repeat;
	}
	100% {
		background: var(--bgi-reflect) var(--bgi-reflect-pos-1)/var(--bgi-reflect-size) no-repeat;
	}
	
}

.text {
	
	--text-delay: calc(var(--a-current-duration) * 2 / 5);
	--text-dur: calc((var(--a-current-duration) - var(--text-delay)) / 2);
	--text-move-amount: 1rem;
	
	align-items: flex-end;
	bottom: -1.5rem;
	display: flex;
	font: normal normal 1000 3rem/1 "Arial", "メイリオ", sans-serif;
	letter-spacing: -1px;
	flex-direction: column;
	justify-content: flex-end;
	padding: .5rem;
	position: absolute;
	white-space: nowrap;
	width: 100%;
	z-index: 3;
	
}
@keyframes spawn-text {
	0% {
		opacity: 0;
	}
	33% {
		opacity: 1;
	}
	100% {
		opacity: 1;
	}
}
@keyframes move-text {
	0% {
		transform: var(--move-text-transform);
	}
	33% {
		transform: translate(0rem,0rem);
	}
	100% {
		transform: translate(0rem,0rem);
	}
}
.f1 .text { align-items: flex-start; }
.f2 .text { align-items: center; }
.f3 .text { align-items: flex-end; }
.f4 .text { align-items: flex-start; }
.f5 .text { align-items: center; }
.f6 .text { align-items: flex-end; }
.f7 .text { align-items: flex-start; }
.f8 .text { align-items: center; }
.f9 .text { align-items: flex-end; }
/* 擬似クラス関数 :is() は Chromium 88 から */
.f1 .text, .f4 .text, .f7 .text { --move-text-transform: translate(var(--text-move-amount), 0rem); }
.f2 .text, .f5 .text, .f8 .text { --move-text-transform: translate(0rem, var(--text-move-amount)); }
.f3 .text, .f6 .text, .f9 .text { --move-text-transform: translate(calc(var(--text-move-amount) * -1), 0rem); }


.text .file-title, .text .file-date {
	
	opacity: 0;
	z-index: 2;
	
	animation:	spawn-text var(--text-dur) ease var(--text-delay) 2 alternate forwards running,
					move-text var(--text-dur) ease var(--text-delay) 2 alternate forwards running;
	
}

.text .file-title {
	
	--text-delay: calc(var(--a-current-duration) * 2 / 5 * .97);
	
	margin-bottom: .2rem;
	text-shadow: 0 0 1rem rgba(0,0,0,1), 0 0 3rem rgba(0,0,0,.75), 0 3px 0 rgba(0,0,0,1);
	
}
.text .file-date {
	
	font-size: 2.1rem;
	text-shadow: 0 0 1rem rgba(0,0,0,1), 0 0 3rem rgba(0,0,0,.75), 0 2px 0 rgba(0,0,0,1);
	
}

.scene {
	
	background:	var(--bgi) var(--bg-pos-flex)/contain no-repeat var(--bgc, transparent);
	
	position: absolute;
	
}
.scene.default {
	
	height: 100%;
	width: 100%;
	
}
.scene:not(.default) {
	
	z-index: var(--z-index, 0);
	
	animation: element-preset-anime var(--dur, var(--a-current-duration, var(--a-duration))) var(--func, ease) 0s var(--count, 1) normal var(--fill, forwards) running;
	
}
@keyframes element-preset-anime {
	
	0% {
		height: var(--from-h);
		left: var(--from-x);
		opacity: var(--o-0, 0);
		top: var(--from-y);
		transform: rotate(var(--from-r));
		width: var(--from-w);
	}
	30% {
		opacity: var(--o-1, 1);
	}
	70% {
		opacity: var(--o-2, 1);
	}
	100% {
		height: var(--to-h, var(--from-h));
		left: var(--to-x, var(--from-x));
		opacity: var(--o-3, 0);
		top: var(--to-y, var(--from-y));
		transform: rotate(var(--to-r, var(--from-r)));
		width: var(--to-w, var(--from-w));
	}
	
}