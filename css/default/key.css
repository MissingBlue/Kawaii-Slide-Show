@keyframes key {
	
	from {
		background:	var(--k-background);
		border-top: var(--k-border-top);
		border-right: var(--k-border-right);
		border-bottom: var(--k-border-bottom);
		border-left: var(--k-border-left);
		border: var(--k-border);
		border-top-left-radius: var(--k-border-top-left-radius);
		border-top-right-radius: var(--k-border-top-right-radius);
		border-bottom-right-radius: var(--k-border-bottom-right-radius);
		border-bottom-left-radius: var(--k-border-bottom-left-radius);
		border-radius: var(--k-border-radius);
		bottom: var(--k-bottom);
		box-shadow: var(--k-box-shadow);
		clip-path: var(--k-clip-path);
		color: var(--color);
		filter: var(--filter, none);
		font: var(--font);
		left: var(--k-left);
		height: var(--k-height);
		margin: var(--k-margin);
		opacity: var(--opacity);
		padding: var(--k-padding);
		right: var(--k-right);
		text-shadow: var(--text-shadow);
		top: var(--k-top);
		transform: var(--transform);
		transform-origin: var(--transform-origin);
		width: var(--k-width);
	}
	
	to {
		background:	var(--k-background-to, var(--k-background));
		border-top: var(--k-border-top-to, var(--k-border-top));
		border-right: var(--k-border-right-to, var(--k-border-right));
		border-bottom: var(--k-border-bottom-to, var(--k-border-bottom));
		border-left: var(--k-border-left-to, var(--k-border-left));
		border: var(--k-border-to, var(--k-border));
		border-top-left-radius: var(--k-border-top-left-radius-to);
		border-top-right-radius: var(--k-border-top-right-radius-to);
		border-bottom-right-radius: var(--k-border-bottom-right-radius-to);
		border-bottom-left-radius: var(--k-border-bottom-left-radius-to);
		border-radius: var(--k-border-radius-to, var(--k-border-radius));
		bottom: var(--k-bottom-to, var(--k-bottom));
		box-shadow: var(--k-box-shadow-to);
		clip-path: var(--k-clip-path-to);
		color: var(--color-to, var(--color));
		filter: var(--filter-to, var(--filter, none));
		font: var(--font-to, var(--font));
		left: var(--k-left-to, var(--k-left));
		height: var(--k-height-to, var(--k-h-calc-to, var(--k-height)));
		margin: var(--k-margin-to, var(--k-margin));
		opacity: var(--opacity-to, var(--opacity));
		padding: var(--k-padding-to, var(--k-padding));
		right: var(--k-right-to, var(--k-right));
		text-shadow: var(--text-shadow-to, var(--text-shadow));
		top: var(--k-top-to, var(--k-top));
		transform: var(--transform-to, var(--transform));
		transform-origin: var(--transform-origin-to, var(--transform-origin));
		width: var(--k-width-to, var(--k-w-calc-to, var(--k-width)));
	}
	
}

.key {
	
	--w: initial;
	--h: initial;
	--x: initial;
	--y: initial;
	--width: initial;
	--height: initial;
	
	--k-w: var(--w, var(--s, 1));
	--k-h: var(--h, var(--s, 1));
	--k-w-calc: calc(var(--viewport-width) * var(--k-w));
	--k-h-calc: calc(var(--viewport-height) * var(--k-h));
	--k-x: calc((var(--viewport-width) - var(--k-w-calc)) * var(--x, 0));
	--k-y: calc((var(--viewport-height) - var(--k-h-calc)) * var(--y, 0));
	
	--k-width: var(--width, var(--k-w-calc, auto));
	--k-height: var(--height, var(--k-h-calc, auto));
	--k-left: var(--left, var(--k-x, auto));
	--k-top: var(--top, var(--k-y, auto));
	--k-right: var(--right, initial);
	--k-bottom: var(--bottom, initial);
	
	--k-w-to: var(--w-to, var(--s-to, var(--s, var(--w, 1))));
	--k-h-to: var(--h-to, var(--s-to, var(--s, var(--h, 1))));
	--k-w-calc-to: calc(var(--viewport-width) * var(--k-w-to));
	--k-h-calc-to: calc(var(--viewport-height) * var(--k-h-to));
	--k-x-to: calc((var(--viewport-width) - var(--k-w-calc-to)) * var(--x-to, var(--x, 0)));
	--k-y-to: calc((var(--viewport-height) - var(--k-h-calc-to)) * var(--y-to, var(--y, 0)));
	
	--k-width-to: var(--width-to, var(--width, var(--k-w-calc-to)));
	--k-height-to: var(--height-to, var(--height, var(--k-h-calc-to)));
	--k-left-to: var(--left-to, var(--left, var(--k-x-to)));
	--k-top-to: var(--top-to, var(--top, var(--k-y-to)));
	--k-right-to: var(--right-to, var(--k-right, initial));
	--k-bottom-to: var(--bottom-to, var(--k-bottom, initial));
	
	/*--k-width-to: var(--width-to, var(--width, var(--k-w-calc-to)));
	--k-height-to: var(--height-to, var(--height, var(--k-h-calc-to)));
	--k-left-to: var(--left-to, var(--left, var(--k-x-to)));
	--k-top-to: var(--top-to, var(--top, var(--k-y-to)));*/
	
	--k-background-attachment: var(--background-attachment, scroll);
	/* 以下のルールは個別にアニメーションを設定する必要があるかもしれない。現状実質的に未使用 */
	--k-background-clip: var(--background-clip, border-box);
	--k-background-color: var(--background-color, transparent);
	--k-background-image: var(--background-image, none);
	--k-background-origin: var(--background-origin, padding-box);
	--k-background-position: var(--background-position, 0% 0%);
	--k-background-repeat: var(--background-repeat, no-repeat);
	--k-background-size: var(--background-size, contain);
	--k-background: var(--background, var(--k-background-image) var(--k-background-position)/var(--k-background-size) var(--k-background-repeat) var(--k-background-origin) var(--k-background-clip) var(--k-background-attachment) var(--k-background-color));
	--k-background-to: var(--background-to, var(--background));
	/*--k-background-to: var(--background-to, var(--k-background-image-to, var(--k-background-image)) var(--k-background-position-to, var(--k-background-position))/var(--k-background-size-to, var(--k-background-size)) var(--k-background-repeat-to, var(--k-background-repeat)) var(--k-background-origin-to, var(--k-background-origin)) var(--k-background-clip-to, var(--k-background-clip)) var(--k-background-attachment-to, var(--k-background-attachment)) var(--k-background-color-to, var(--k-background-color)));*/
	
	--k-border-color: var(--border-color, initial);
	--k-border-style: var(--border-style, initial);
	--k-border-width: var(--border-width, initial);
	--k-border: var(--border, var(--k-border-color) var(--k-border-style) var(--k-border-width));
	--k-border-color-to: var(--border-color-to, var(--k-border-color));
	--k-border-style-to: var(--border-style-to, var(--k-border-style));
	--k-border-width-to: var(--border-width-to, var(--k-border-width));
	--k-border-to: var(--border-to, var(--k-border));
	--k-border-top-color: var(--border-top-color, initial);
	--k-border-top-style: var(--border-top-style, initial);
	--k-border-top-width: var(--border-top-width, initial);
	--k-border-top: var(--border-top, var(--k-border-top-color) var(--k-border-top-style) var(--k-border-top-width));
	--k-border-top-color-to: var(--border-top-color-to, var(--k-border-color));
	--k-border-top-style-to: var(--border-top-style-to, var(--k-border-style));
	--k-border-top-width-to: var(--border-top-width-to, var(--k-border-width));
	--k-border-top-to: var(--border-top-to, var(--k-border-top));
	--k-border-right-color: var(--border-right-color, initial);
	--k-border-right-style: var(--border-right-style, initial);
	--k-border-right-width: var(--border-right-width, initial);
	--k-border-right: var(--border-right, var(--k-border-right-color) var(--k-border-right-style) var(--k-border-right-width));
	--k-border-right-color-to: var(--border-right-color-to, var(--k-border-color));
	--k-border-right-style-to: var(--border-right-style-to, var(--k-border-style));
	--k-border-right-width-to: var(--border-right-width-to, var(--k-border-width));
	--k-border-right-to: var(--border-right-to, var(--k-border-right));
	--k-border-bottom-color: var(--border-bottom-color, initial);
	--k-border-bottom-style: var(--border-bottom-style, initial);
	--k-border-bottom-width: var(--border-bottom-width, initial);
	--k-border-bottom: var(--border-bottom, var(--k-border-bottom-color) var(--k-border-bottom-style) var(--k-border-bottom-width));
	--k-border-bottom-color-to: var(--border-bottom-color-to, var(--k-border-color));
	--k-border-bottom-style-to: var(--border-bottom-style-to, var(--k-border-style));
	--k-border-bottom-width-to: var(--border-bottom-width-to, var(--k-border-width));
	--k-border-bottom-to: var(--border-bottom-to, var(--k-border-bottom));
	--k-border-left-color: var(--border-left-color, initial);
	--k-border-left-style: var(--border-left-style, initial);
	--k-border-left-width: var(--border-left-width, initial);
	--k-border-left: var(--border-left, var(--k-border-left-color) var(--k-border-left-style) var(--k-border-left-width));
	--k-border-left-color-to: var(--border-left-color-to, var(--border-left-color));
	--k-border-left-style-to: var(--border-left-style-to, var(--border-left-style));
	--k-border-left-width-to: var(--border-left-width-to, var(--border-left-width));
	--k-border-left-to: var(--border-left-to, var(--k-border-left));
	
	--k-border-top-left-radius: var(--border-top-left-radius, initial);
	--k-border-top-right-radius: var(--border-top-right-radius, initial);
	--k-border-bottom-right-radius: var(--border-bottom-right-radius, initial);
	--k-border-bottom-left-radius: var(--border-bottom-left-radius, initial);
	--k-border-radius: var(--border-radius, var(--bk-order-top-left-radius) var(--k-border-top-right-radius) var(--k-border-k-bottom-right-radius) var(--k-border-bottom-left-radius));
	--k-border-top-left-radius-to: var(--border-top-left-radius-to, initial);
	--k-border-top-right-radius-to: var(--border-top-right-radius-to, initial);
	--k-border-bottom-right-radius-to: var(--border-bottom-right-radius-to, initial);
	--k-border-bottom-left-radius-to: var(--border-bottom-left-radius-to, initial);
	--k-border-radius-to: var(--border-radius-to, var(--k-border-radius));
	
	--k-margin-top: var(--margin-top, 0px);
	--k-margin-right: var(--margin-right, 0px);
	--k-margin-bottom: var(--margin-bottom, 0px);
	--k-margin-left: var(--margin-left, 0px);
	--k-margin: var(--margin, var(--k-margin-top) var(--k-margin-right) var(--k-margin-bottom) var(--k-margin-left));
	--k-margin-top-to: var(--margin-top-to, 0px);
	--k-margin-right-to: var(--margin-right-to, 0px);
	--k-margin-bottom-to: var(--margin-bottom-to, 0px);
	--k-margin-left-to: var(--margin-left-to, 0px);
	--k-margin-to: var(--margin-to, var(--k-margin));
	
	--k-padding-top: var(--padding-top, 0px);
	--k-padding-right: var(--padding-right, 0px);
	--k-padding-bottom: var(--padding-bottom, 0px);
	--k-padding-left: var(--padding-left, 0px);
	--k-padding: var(--padding, var(--k-padding-top) var(--k-padding-right) var(--k-padding-bottom) var(--k-padding-left));
	--k-padding-top-to: var(--padding-top-to, 0px);
	--k-padding-right-to: var(--padding-right-to, 0px);
	--k-padding-bottom-to: var(--padding-bottom-to, 0px);
	--k-padding-left-to: var(--padding-left-to, 0px);
	--k-padding-to: var(--padding-to, var(--k-padding));
	
	--transform: none;
	--transform-origin: center;
	--opacity: 1;
	
	--k-font-weight: var(--font-weight, normal);
	--k-font-size: var(--font-size, 1rem);
	--k-line-height: var(--line-height, 1);
	--k-font-family: var(--font-family, "メイリオ", sans-serif);
	--k-font-weight-to: var(--font-weight-to, var(--k-font-weight));
	--k-font-size-to: var(--font-size-to, var(--k-font-size));
	--k-line-height-to: var(--font-height-to, var(--k-line-height));
	--k-font-family-to: var(--font-family-to, var(--k-font-family));
	
	--font: normal normal var(--k-font-weight) var(--k-font-size)/var(--k-line-height) var(--k-font-family);
	--font-to: normal normal var(--k-font-weight-to) var(--k-font-size-to)/var(--k-line-height-to) var(--k-font-family-to);
	
	--k-animation: var(--animation, var(--animation-name, key) var(--animation-duration, var(--dur, 0s)) var(--animation-timing-function, var(--func, ease)) var(--animation-delay, var(--delay, 0s)) var(--animation-iteration-count, var(--iterate, 1)) var(--animation-direction, var(--dir, normal)) var(--animation-fill-mode, forwards) var(--animation-play-mode, running));
	
	--k-clip-path: var(--clip-path, none);
	--k-clip-path-to: var(--clip-path-to, var(--clip-path));
	
	--k-box-shadow: var(--box-shadow, none);
	--k-box-shadow-to: var(--box-shadow-to, var(--box-shadow));
	--k-text-shadow: var(--text-shadow, none);
	--k-text-shadow-to: var(--text-shadow-to, var(--text-shadow));
	
	background:	var(--k-background);
	border-top: var(--k-border-top);
	border-right: var(--k-border-right);
	border-bottom: var(--k-border-bottom);
	border-left: var(--k-border-left);
	border: var(--k-border);
	border-top-left-radius: var(--k-border-top-left-radius);
	border-top-right-radius: var(--k-border-top-right-radius);
	border-bottom-right-radius: var(--k-border-bottom-right-radius);
	border-bottom-left-radius: var(--k-border-bottom-left-radius);
	border-radius: var(--k-border-radius);
	bottom: var(--k-bottom);
	box-shadow: var(--k-box-shadow);
	clip-path: var(--k-clip-path);
	display: var(--display, flex);
	filter: var(--filter, none);
	font: var(--font);
	left: var(--k-left);
	height: var(--k-height);
	margin: var(--k-margin);
	opacity: var(--opacity);
	padding: var(--k-padding);
	position: var(--position, absolute);
	right: var(--k-right);
	text-shadow: var(--k-text-shadow);
	top: var(--k-top);
	transform: var(--transform);
	transform-origin: var(--transform-origin);
	width: var(--k-width);
	word-break: var(--word-break, keep-all);
	writing-mode: var(--writing-mode, inherit);
	z-index: var(--z-index, 0);
	
	animation: var(--k-animation);
	
}
.key.in {
	
	/*
		以下の変数は、.key.in > .key.out > .key.primary で入れ子する .key のアニメーションの各開始、終了、再生時間の指定を
		抽象化することを目的としている。すべての変数は割合を示す単位のない実数のみを指定する。
		それらの割合は変数 --k-time で表される画像の有効再生時間を範囲に取る。（ただし --key-animation-duration, --key-animation-end は別）
		平たく言えば、.key.in のアニメーション開始時間を全体の基準開始時間として、
		また .key.primary のアニメーション開始時間を .key.out の基準開始時間として、
		それぞれのアニメーションの開始、終了、再生時間を、それぞれの開始時間と画像の再生終了時間との間で半ば自動的に行なうようにする。
		全体の再生時間が 5 秒の時に
		--key-animation-begin: 0.1; --key-animation-transition: 0.1; --key-animation-duration: 1; は、
		.key.in のアニメーションを 0.5 秒後に 0.5 秒間再生し、
		.key.primary のアニメーション .key.in のアニメーションの再生終了後から 4 秒間再生するを意味する。
		一見すると難解かつ複雑な仕様だが、同じ指定を --dur, --delay を使って実現すると、
		--key-time: var(--k-time, var(--time));
		--k-delay-in: calc(var(--key-time) * .1);
		--k-dur-in: calc(var(--key-time) * .1);
		--k-delay-primary: calc(var(--k-delay-in) + var(--k-dur-in));
		--k-dur-primary: calc((var(--key-time) - var(--k-delay-primary)) * 1);
		と最大限に短絡化した表現でも非常に冗長である。
		これらの変数の使用は任意で、各 .key に直接かつ個別に再生、開始時間を指定したければ、
		通常通りそれぞれの --delay, --dur に時間を指定すればその値が常に優先して使用される。
		
		--key-animation-begin
			アニメーションの開始トランジションの開始時間を実数の割合で指定。
		--key-animation-transition
			アニメーションの開始、終了トランジションの再生時間を実数の割合で指定。
		--key-animation-delay
			アニメーションの開始時間を実数の割合で指定。未指定の場合 --key-animation-begin と --key-animation-transition の和が使われる。
		--key-animation-duration
			アニメーションの時間を実数の割合で指定。この割合が示す時間の範囲は 総時間から --key-animation-delay を引いたものになる。
			例えば総時間が 5 秒で、--key-animation-duration: 0.5; --key-animation-delay: 0.2; だった場合、
			アニメーションの再生時間は 5s * 0.5 で 2.5s ではなく、(5s - 5s * 0.2) * 0.5 で 2s になる。（s は秒）
		--key-animation-end
			*廃止
				仕様の実装には分岐が欠かせないが、現状では CSS で分岐はできない。
				現在は、--key-animation-end-transition の指定に基づいた値でアニメーションが終了する時間に自動で切り詰められる。
			アニメーションの終了トランジションの開始時間を実数の割合で指定。
			この割合が示す時間も --key-animation-duration と同様の範囲を指す。
			未指定の場合は、アニメーションの再生時間から終了トランジションの再生時間を引いた時間、
			つまり終了トランジションの再生時間がアニメーションの再生時間と一致する値が自動的に使用される。
		--key-animation-end-transition
			アニメーションの終了トランジションの再生時間を実数の割合で指定。未指定の場合 --key-animation-transition の値が使われる。
	*/
	--kt: var(--k-time, var(--time));
	
	--k-delay-in: calc(var(--kt) * var(--key-animation-begin));
	--k-dur-in: calc(var(--kt) * var(--key-animation-transition));
	--k-delay-primary: calc(var(--kt) * (var(--key-animation-delay, var(--key-animation-begin)) + var(--key-animation-transition, 0)));
	--k-dur-primary: calc((var(--kt) - var(--k-delay-primary, 0s)) * var(--key-animation-duration));
	/*--k-delay-out-default: calc((var(--kt) - var(--k-delay-primary)) * var(--key-animation-end));*/
	--k-delay-out: calc((var(--k-delay-primary) + var(--k-dur-primary)) - var(--k-dur-out));
	--k-dur-out: calc(var(--kt) * var(--key-animation-end-transition, var(--key-animation-transition)));
	
	--delay: var(--delay-in, var(--k-delay-in, 0s));
	--dur: var(--dur-in, var(--k-dur-in, 0s));
	
	--opacity: var(--key-in-opacity, 0);
	--opacity-to: var(--key-in-opacity-to, 1);
	
}
.key.out {
	
	--delay: var(--delay-out, var(--k-delay-out, 0s));
	--dur: var(--dur-out, var(--k-dur-out, 0s));
	
	--opacity: var(--key-out-opacity, var(--key-in-opacity-to, 1));
	--opacity-to: var(--key-out-opacity-to, var(--key-in-opacity, 0));
	
}
.key.in > .key.out > .key {
	
	--delay: var(--delay-primary, var(--k-delay-primary, 0s));
	--dur: var(--dur-primary, var(--k-dur-primary, var(--kt, var(--a-duration, 0s))));
	
}
.key.primary {
	
	--background-image: var(--bgi);
	--opacity: var(--key-opacity, var(--key-in-opacity-to, 1));
	--opacity-to: var(--key-opacity-to, var(--key-out-opacity, var(--key-in-opacity-to, initial)));
	
}